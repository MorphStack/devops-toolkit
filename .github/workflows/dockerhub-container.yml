# This workflow builds a Docker image, and pushes the image to DockerHub.
# It requires the following secrets to be set in the GitHub repository:
# - DOCKERHUB_USERNAME: Your DockerHub username
# - DOCKERHUB_TOKEN: Your DockerHub access token
# It also requires the following repository variables to be set:
# - PUBLISH_SNAPSHOT: Whether to publish snapshot versions (default: 'false')
# - SNAPSHOT_SUFFIX: The suffix to use for snapshot versions (default: 'snapshot')
name: DockerHub Container Build & Release

on:
  push:
    branches:
      - main
      - 'feature/*'

jobs:
  build-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        if: ${{ vars.PUBLISH_SNAPSHOT == 'true' || github.ref == 'refs/heads/main' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set version variables
        id: vars
        if: ${{ vars.PUBLISH_SNAPSHOT == 'true' || github.ref == 'refs/heads/main' }}
        uses: ./.github/actions/update-version-action
        with:
          snapshot_suffix: ${{ vars.SNAPSHOT_SUFFIX || 'snapshot' }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/devops-toolkit:${{ steps.vars.outputs.version }} .

      - name: Push Docker image
        if: ${{ vars.PUBLISH_SNAPSHOT == 'true' || github.ref == 'refs/heads/main' }}
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/devops-toolkit:${{ steps.vars.outputs.version }}

      - name: Tag release and update major branch
        if: steps.vars.outputs.is_release == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.vars.outputs.version }}
          git push origin ${{ steps.vars.outputs.version }}

          # Update or create major version branch
          git fetch origin
          git branch -f ${{ steps.vars.outputs.major }}
          git push origin ${{ steps.vars.outputs.major }} --force